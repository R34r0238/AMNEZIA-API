#!/bin/bash
set -e

if [ "$#" -ne 4 ]; then
    echo "Usage: $0 CLIENT_NAME CLIENT_PUBLIC_KEY WG_CONFIG_FILE DOCKER_CONTAINER"
    exit 1
fi

CLIENT_NAME="$1"
CLIENT_PUBLIC_KEY="$2"  # –î–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏, –Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–∏—Å–∫–∞
WG_CONFIG_FILE="$3"
DOCKER_CONTAINER="$4"

pwd=$(pwd)
mkdir -p "$pwd/files"
SERVER_CONF_PATH="$pwd/files/server.conf"

# 1. –ö–æ–ø–∏—Ä—É–µ–º —Ç–µ–∫—É—â–∏–π –∫–æ–Ω—Ñ–∏–≥ –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
echo "üîπ –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π wg0.conf –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
docker exec -i "$DOCKER_CONTAINER" cat "$WG_CONFIG_FILE" > "$SERVER_CONF_PATH"

# 2. –£–¥–∞–ª—è–µ–º –í–°–ï –±–ª–æ–∫–∏ [Peer], –≥–¥–µ –ø–µ—Ä–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π ‚Äî # CLIENT_NAME
echo "üîπ –®–∞–≥ 2: –£–¥–∞–ª—è–µ–º –≤—Å–µ –±–ª–æ–∫–∏ [Peer] —Å –∏–º–µ–Ω–µ–º '$CLIENT_NAME'..."
awk -v name="$CLIENT_NAME" '
    BEGIN { in_peer=0; skip=0; peer_lines="" }
    /^\[Peer\]/ {
        if (in_peer && !skip) printf "%s", peer_lines
        in_peer=1
        skip=0
        peer_lines=$0 "\n"
        next
    }
    in_peer {
        peer_lines = peer_lines $0 "\n"
        if (/^# /) {
            gsub(/^# /, "", $0)
            gsub(/\[.*\]/, "", $0)
            gsub(/^[ \t]+|[ \t]+$/, "", $0)
            if ($0 == name) {
                skip=1
            }
        }
        if (/^\[Peer\]/ || /^\[Interface\]/ || $0 == "") {
            if (in_peer && !skip) printf "%s", peer_lines
            in_peer=0
            skip=0
            peer_lines=""
            if (/^\[Peer\]/ || /^\[Interface\]/) {
                print
            }
            next
        }
        next
    }
    { print }
    END {
        if (in_peer && !skip) printf "%s", peer_lines
    }
' "$SERVER_CONF_PATH" > "$SERVER_CONF_PATH.tmp"

mv "$SERVER_CONF_PATH.tmp" "$SERVER_CONF_PATH"

# 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ñ–∞–π–ª –∏–∑–º–µ–Ω–∏–ª—Å—è
if diff "$SERVER_CONF_PATH" <(docker exec -i "$DOCKER_CONTAINER" cat "$WG_CONFIG_FILE") >/dev/null; then
    echo "‚ö†Ô∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, –∫–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω."
else
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–∞."
fi

# 4. –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥ –æ–±—Ä–∞—Ç–Ω–æ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
echo "üîπ –®–∞–≥ 3: –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–π wg0.conf –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
docker cp "$SERVER_CONF_PATH" "$DOCKER_CONTAINER":"$WG_CONFIG_FILE"

# 5. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä ‚Äî —ç—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ WireGuard –ø–µ—Ä–µ—á–∏—Ç–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥
echo "üîπ –®–∞–≥ 4: –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä '$DOCKER_CONTAINER'..."
docker restart "$DOCKER_CONTAINER"

# –ñ–¥—ë–º, –ø–æ–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
sleep 5

# 6. –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã –∫–ª–∏–µ–Ω—Ç–∞
echo "üîπ –®–∞–≥ 5: –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—É—é –ø–∞–ø–∫—É –∫–ª–∏–µ–Ω—Ç–∞..."
rm -rf "users/$CLIENT_NAME"

# 7. –û–±–Ω–æ–≤–ª—è–µ–º clientsTable –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
echo "üîπ –®–∞–≥ 6: –û–±–Ω–æ–≤–ª—è–µ–º clientsTable –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ..."
CLIENTS_TABLE_PATH="$pwd/files/clientsTable"
docker exec -i "$DOCKER_CONTAINER" cat /opt/amnezia/awg/clientsTable > "$CLIENTS_TABLE_PATH" 2>/dev/null || echo "[]" > "$CLIENTS_TABLE_PATH"

if [ -f "$CLIENTS_TABLE_PATH" ]; then
    jq --arg name "$CLIENT_NAME" 'map(select(.userData.clientName != $name))' "$CLIENTS_TABLE_PATH" > "$CLIENTS_TABLE_PATH.tmp"
    mv "$CLIENTS_TABLE_PATH.tmp" "$CLIENTS_TABLE_PATH"
    docker cp "$CLIENTS_TABLE_PATH" "$DOCKER_CONTAINER":/opt/amnezia/awg/clientsTable
    echo "‚úÖ clientsTable –æ–±–Ω–æ–≤–ª—ë–Ω."
fi

echo "üéâ –í—Å–µ –∫–ª–∏–µ–Ω—Ç—ã —Å –∏–º–µ–Ω–µ–º '$CLIENT_NAME' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –∏ –ª–æ–∫–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã."